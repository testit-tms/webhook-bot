services:
  webhook-bot:
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: webhook
    image: ${IMAGE_NAME}:${IMAGE_TAG}
    ports:
      - 8080:8080
    environment:
      DB_NAME:      "${POSTGRES_DB}"
      DB_USER:      "${POSTGRES_USER}"
      DB_PASSWORD:  "${POSTGRES_PASSWORD}"
      DB_HOST:      "${DB_HOST:-postgres}"
      DB_PORT:      "${DB_PORT:-5432}"
      LOG_LEVEL:    "${LOG_LEVEL:-Info}"
      BOT_TOKEN:    "${BOT_TOKEN}"
      TIMEOUT:      "${TIMEOUT:-4s}"
      IDLE_TIMEOUT: "${IDLE_TIMEOUT:-60s}"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      api_network:

  postgres:
    logging:
      driver: "json-file"
      options:
        max-size: "500m"
        max-file: "2"
    image: postgres:14
    environment:
      POSTGRES_DB:       "${POSTGRES_DB}"
      POSTGRES_USER:     "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - postgres:/var/lib/postgresql/data
      - ../migrations/0001_CREATE_TABLES.sql:/docker-entrypoint-initdb.d/0001_CREATE_TABLES.sql
    restart: unless-stopped
    networks:
      api_network:

  fluent-bit:
    image: fluent/fluent-bit
    ports:
      - 24224:24224
    volumes:
      - ./fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
    networks:
      api_network:

networks:
  api_network: null

volumes:
  postgres: null
